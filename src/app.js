"use strict"

var app = angular.module("myApp", []);

app.service('TestService', function() {
	var data = "azeaze";

	this.getData = function() {
		return data;
	}
});

app.service('CalculatorService', function() {
	this.add = function(value1, value2) {
		return parseInt(value1) + parseInt(value2);
	}

	this.subtract = function(value1, value2) {
		return parseInt(value1) - parseInt(value2);
	}
});

app.service('RandomNameService', function() {
	var firstNames = ['David', 'John', 'Jane'];
	var lastNames = ['David', 'John', 'Jane'];

	this.getFirstName = function() {
		var index = Math.floor(Math.random() * firstNames.length);
		return firstNames[index];
	}

	this.getLastName = function() {
		var index = Math.floor(Math.random() * lastNames.length);
		return lastNames[index];
	}	
});

app.service('UserService', function(RandomNameService) {
	this.getFullName = function() {
		return RandomNameService.getFirstName() + ' ' + RandomNameService.getLastName();
	}
});

app.service('AppModel', function($http, $q) {
	this.getStates = function() {
		var defer = $q.defer();

		$http.get('http://127.0.0.1:8080/todos')
			.then(function(response) {
				defer.resolve(response.data);
			}.bind(this), 
			function(response) {
				defer.reject({error: response.data, status: response.status});
			});

		return defer.promise;
	}
});

app.filter('dashes', function() {
	return function(value) {
		value = value.replace(/\s/g, '-');
		return value;
	}
});

app.service('TransformService', function() {
	this.transform = function(value, mode) {
			var result = null;
		if(mode === 'dashes') {
			result = value.replace(/\s/g, '-');
		}
		else if(mode === 'capitalize') {
			var words = value.split(' ');
			for (var counter = 0; counter < words.length; counter++) {
				words[counter] = words[counter].substr(0,1).toUpperCase() + words[counter].substr(1).toLowerCase();
			}
			result = words.join(' ');
		}
		return result;
	}
});

app.filter('transform', function(TransformService) {
	return function(value, mode) {
		return TransformService.transform(value, mode);
	}
});

// TESTING DIRECTIVES //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
app.directive('tstSimpleDirective', function() {
	return {
		restrict: 'E',
		replace: true,
		template: '<p>My simple directive</p>'
	}
})
;////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// TESTING DIRECTIVES WITH EXTERNAL TEMPLATES //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
app.directive('tstExternalDirective', function() {
	return {
		restrict: 'E',
		replace: true,
		templateUrl: 'template.html'
	}
});
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// TESTING DIRECTIVES BINDINGS //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
app.directive('tstBindingDirective', function() {
	return {
		restrict: 'E',
		replace: true,
		templateUrl: 'template.html',
		scope: {
			person:'='
		},
		controller: function() {
		}
	}
});
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// TESTING EVENTS ON DIRECTIVES //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
app.directive('tstEventsDirective', function() {
	return {
		restrict: 'E',
		replace: true,
		templateUrl: 'templateEvent.html',
		scope: {
			isActivated: '='
		},
		controller: function($scope) {
			$scope.toggleActivated = function() {
				$scope.isActivated = !$scope.isActivated;
			}
		}
	}
});
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

app.controller('myController', ['AppModel', 'TestService', 'CalculatorService', 'UserService', "$scope", "$http", "$q", '$filter', function(AppModel, TestService, CalculatorService, UserService, $scope, $http, $q, $filter) {
// TESTING SIMPLE SERVICE ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	$scope.getData = function() {
		$scope.data = TestService.getData();
	}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// TESTING CONTROLLER ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	$scope.inputValue = null;
	$scope.result = null;

	$scope.calculateSquare = function(value) {
		$scope.inputValue = value;
		$scope.result = value * value;
	}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// TESTING CONTROLLER WITH DEPENDENCIES ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	$scope.value1 = null;
	$scope.value2 = null;

	$scope.add = function(v1, v2) {
		$scope.calculResult = CalculatorService.add(v1, v2);
	}

	$scope.subtract = function(v1, v2) {
		$scope.calculResult = CalculatorService.subtract(v1, v2);
	}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// TESTING SERVICE WITH DEPENDENCIES ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	$scope.name = '';

	$scope.getName = function() {
		$scope.name = UserService.getFullName();
	}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// TESTING AJAX CALLS //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	$scope.states = [];

	$scope.getStates = function() {
		AppModel.getStates().then(
			function(data) {
				$scope.states = data;
			}
		);
	}	
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// TESTING FILTERS //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	var dashFilter = $filter('dashes');

	$scope.applyFilter = function() {
		$scope.dashValue = dashFilter($scope.inputDashValue);
	}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// TESTING FILTERS WITH DEPENDENCIES //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	var transformFilter = $filter('transform');

	$scope.firstValue = 'This a test of the filter service';
	$scope.secondValue = transformFilter('This is a second test added in the controller.', 'dashes');

	$scope.thirdValue = '';

	$scope.applyTransformFilter = function() {
		$scope.thirdValue = transformFilter($scope.inputTransformValue, 'capitalize');
	}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
}]);